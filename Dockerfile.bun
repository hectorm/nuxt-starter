##################################################
## "build" stage
##################################################

FROM docker.io/oven/bun:1.2.16-debian@sha256:df45cf7e7578b31c5888a270fa9fad9ba6939d239b6d3e907118cf986b861077 AS build

ENV BUN_INSTALL=/bun
ENV PATH=${BUN_INSTALL}/bin:${PATH}
ENV NITRO_PRESET=bun
ENV PRISMA_DATABASE_URL=postgresql://localhost:5432/app
ENV PRISMA_SHADOW_DATABASE_URL=postgresql://localhost:5432/app_shadow

RUN bun install -g node-gyp

WORKDIR /src/

COPY ./package.json ./pnpm-lock.yaml ./pnpm-workspace.yaml /src/
COPY ./prisma/ /src/prisma/

RUN --mount=type=cache,id=bun,dst=/bun/install/cache/ \
	bun install

COPY ./ /src/

RUN --network=none --mount=type=cache,id=bun,dst=/bun/install/cache/ \
	bun run lint build

##################################################
## "main" stage
##################################################

FROM gcr.io/distroless/cc-debian12:nonroot@sha256:a3c413a866ff27d0ae9e8555fd7c29991799aba085d1d7eb3348acac171a1752 AS main

COPY --from=build --chown=0:0 /usr/local/bin/bun /bun
COPY --from=build --chown=0:0 /src/.output/ /app/

WORKDIR /app/

HEALTHCHECK --start-period=60s --interval=30s --timeout=10s --retries=2 \
	CMD ["/bun", "run", "/app/bin/healthcheck.mjs"]

ENTRYPOINT ["/bun", "run", "/app/server/index.mjs"]
CMD []
