//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider          = "postgresql"
  url               = env("PRISMA_DATABASE_URL")
  shadowDatabaseUrl = env("PRISMA_SHADOW_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

model User {
  id       String         @default(uuid(7)) @map("id") @db.Uuid()
  username String         @map("username") @db.Text()
  fullname String         @map("fullname") @db.Text()
  email    String         @map("email") @db.VarChar(254)
  accounts Account[]
  sessions Session[]
  roles    RolesOnUsers[]

  @@id([id], map: "users_pkey")
  @@unique([username], map: "users_username_key")
  @@unique([username, id], map: "users_username_id_key")
  @@unique([email], map: "users_email_key")
  @@unique([email, id], map: "users_email_id_key")
  @@map("users")
}

model Account {
  id        String   @default(uuid(7)) @map("id") @db.Uuid()
  iss       String   @map("iss") @db.Text()
  sub       String   @map("sub") @db.Text()
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "accounts_user_id_fkey")
  userId    String   @map("user_id") @db.Uuid()
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)

  @@id([id], map: "accounts_pkey")
  @@unique([iss, sub], map: "accounts_iss_sub_key")
  @@index([userId], map: "accounts_user_id_idx")
  @@map("accounts")
}

model Session {
  id        String   @default(uuid(7)) @map("id") @db.Uuid()
  token     String   @map("token") @db.VarChar(48)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "sessions_user_id_fkey")
  userId    String   @map("user_id") @db.Uuid()
  sid       String?  @map("sid") @db.Text()
  idToken   String?  @map("id_token") @db.Text()
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)
  expiresAt DateTime @map("expires_at") @db.Timestamptz(3)

  @@id([id], map: "sessions_pkey")
  @@unique([token], map: "sessions_token_key")
  @@index([userId], map: "sessions_user_id_idx")
  @@map("sessions")
}

model Role {
  id          String               @default(uuid(7)) @map("id") @db.Uuid()
  name        String               @map("name") @db.VarChar(100)
  users       RolesOnUsers[]
  permissions PermissionsOnRoles[]

  @@id([id], map: "roles_pkey")
  @@unique([name], map: "roles_name_key")
  @@map("roles")
}

model RolesOnUsers {
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Restrict, map: "roles_users_role_id_fkey")
  roleId String @map("role_id") @db.Uuid()
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "roles_users_user_id_fkey")
  userId String @map("user_id") @db.Uuid()

  @@id([roleId, userId], map: "roles_users_pkey")
  @@index([roleId], map: "roles_users_role_id_idx")
  @@index([userId], map: "roles_users_user_id_idx")
  @@map("roles_users")
}

model Permission {
  id    String               @default(uuid(7)) @map("id") @db.Uuid()
  name  String               @map("name") @db.VarChar(100)
  roles PermissionsOnRoles[]

  @@id([id], map: "permissions_pkey")
  @@unique([name], map: "permissions_name_key")
  @@map("permissions")
}

model PermissionsOnRoles {
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade, map: "permissions_roles_permission_id_fkey")
  permissionId String     @map("permission_id") @db.Uuid()
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade, map: "permissions_roles_role_id_fkey")
  roleId       String     @map("role_id") @db.Uuid()

  @@id([permissionId, roleId], map: "permissions_roles_pkey")
  @@index([permissionId], map: "permissions_roles_permission_id_idx")
  @@index([roleId], map: "permissions_roles_role_id_idx")
  @@map("permissions_roles")
}
