# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
stages:
  - "build"
  - "test"
  - "push"

variables:
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_TLS_CERTDIR: "/certs"
  BUILDKIT_PROGRESS: "plain"

default:
  image: "docker.io/docker:28-cli"
  services:
    - name: "docker.io/docker:28-dind"
      alias: "docker"

.docker:
  before_script:
    - "docker context create ci"
    - "docker buildx create ci --name builder --bootstrap --use"
    - 'printenv CI_REGISTRY_PASSWORD | docker login --username "${CI_REGISTRY_USER:?}" --password-stdin "${CI_REGISTRY:?}"'
  after_script:
    - 'docker logout "${CI_REGISTRY:?}"'

version:
  stage: ".pre"
  script:
    - |
      touch ./version.env
      if [ -n "${CI_COMMIT_TAG-}" ]; then
        printf "CI_VERSION_MAJOR=%s\n" "${CI_COMMIT_TAG%.*.*}" >> ./version.env
        printf "CI_VERSION_MINOR=%s\n" "${CI_COMMIT_TAG%.*}" >> ./version.env
        printf "CI_VERSION_PATCH=%s\n" "${CI_COMMIT_TAG:?}" >> ./version.env
      fi
  artifacts:
    reports:
      dotenv: "./version.env"

build:
  stage: "build"
  parallel: &parallel
    matrix:
      - ID: "node-linux-amd64"
        DOCKERFILE: "./Dockerfile"
        PLATFORM: "linux/amd64"
      - ID: "node-linux-arm64-v8"
        DOCKERFILE: "./Dockerfile"
        PLATFORM: "linux/arm64/v8"
      # - ID: "bun-linux-amd64"
      #   DOCKERFILE: "./Dockerfile.bun"
      #   PLATFORM: "linux/amd64"
      # - ID: "bun-linux-arm64-v8"
      #   DOCKERFILE: "./Dockerfile.bun"
      #   PLATFORM: "linux/arm64/v8"
  before_script:
    - !reference [".docker", "before_script"]
  script:
    - |
      docker buildx build \
        --file "${DOCKERFILE:?}" \
        --platform "${PLATFORM:?}" \
        --cache-from "type=registry,ref=${CI_REGISTRY_IMAGE:?}:cache-${CI_COMMIT_REF_SLUG:?}-${ID:?}" \
        --cache-to "type=registry,ref=${CI_REGISTRY_IMAGE:?}:cache-${CI_COMMIT_REF_SLUG:?}-${ID:?},mode=max" \
        ./
  after_script:
    - !reference [".docker", "after_script"]

test:
  stage: "test"
  needs: ["build"]
  parallel: *parallel
  variables:
    COMPOSE_FILE: "./compose.keycloak.yaml:./compose.ci.yaml"
    COMPOSE_PROFILES: "production"
    COMPOSE_OVERRIDE: |
      services:
        app:
          platform: "$${PLATFORM:?}"
          build:
            dockerfile: "$${DOCKERFILE:?}"
            cache_from: ["type=registry,ref=$${CI_REGISTRY_IMAGE:?}:cache-$${CI_COMMIT_REF_SLUG:?}-$${ID:?}"]
  before_script:
    - !reference [".docker", "before_script"]
  script:
    - "printenv COMPOSE_OVERRIDE > ./compose.ci.yaml"
    - "docker compose up --detach --wait --wait-timeout 300"
  after_script:
    - "docker compose logs --tail all"
    - "docker compose down --volumes"
    - "docker compose rm --force"
    - !reference [".docker", "after_script"]

push:
  stage: "push"
  needs: ["version", "test"]
  variables:
    PLATFORMS: |
      linux/amd64
      linux/arm64/v8
    CACHE_FROM: |
      type=registry,ref=${CI_REGISTRY_IMAGE}:cache-${CI_COMMIT_REF_SLUG}-node-linux-amd64
      type=registry,ref=${CI_REGISTRY_IMAGE}:cache-${CI_COMMIT_REF_SLUG}-node-linux-arm64-v8
  rules:
    - if: "$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH"
      variables:
        TAGS: |
          ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+){2}$/'
      variables:
        TAGS: |
          ${CI_REGISTRY_IMAGE}:latest
          ${CI_REGISTRY_IMAGE}:${CI_VERSION_MAJOR}
          ${CI_REGISTRY_IMAGE}:${CI_VERSION_MINOR}
          ${CI_REGISTRY_IMAGE}:${CI_VERSION_PATCH}
  before_script:
    - !reference [".docker", "before_script"]
  script:
    - |
      set --
      _IFS="${IFS?}"; IFS="$(printf '\nx')"; IFS="${IFS%x}"
      for platform   in ${PLATFORMS?};  do set -- "${@}" --platform   "${platform:?}";   done
      for tag        in ${TAGS?};       do set -- "${@}" --tag        "${tag:?}";        done
      for cache_from in ${CACHE_FROM?}; do set -- "${@}" --cache-from "${cache_from:?}"; done
      IFS="${_IFS?}"
      docker buildx build --file ./Dockerfile --push "${@}" ./
  after_script:
    - !reference [".docker", "after_script"]
